{"version":3,"sources":["gif/maze.gif","images sync nonrecursive //.(png|jpe?g|svg)$","images/3dsMax.jpg","images/3dsMax0001.jpg","images/3dsMax0002.jpg","images/3dsMax0003.jpg","images/3dsMax0004.jpg","images/3dsMax0005.jpg","images/3dsMax0006.jpg","images/3dsMax0007.jpg","images/3dsMax0008.jpg","images/3dsMax0009.jpg","images/3dsMax0010.jpg","images/3dsMax0011.jpg","images/3dsMax0012.jpg","images/3dsMax0013.jpg","images/3dsMax0014.jpg","images/3dsMax0015.jpg","images/3dsMax0016.jpg","images/3dsMax0017.jpg","images/3dsMax0018.jpg","images/3dsMax0019.jpg","images/3dsMax0020.jpg","images/3dsMax0021.jpg","images/3dsMax0022.jpg","images/3dsMax0023.jpg","images/3dsMax0024.jpg","images/3dsMax0025.jpg","images/3dsMax0026.jpg","images/3dsMax0027.jpg","images/3dsMax0028.jpg","images/3dsMax0029.jpg","images/3dsMax0030.jpg","images/3dsMax0031.jpg","images/3dsMax0032.jpg","images/3dsMax0033.jpg","images/3dsMax0034.jpg","images/3dsMax0035.jpg","images/3dsMax0036.jpg","images/3dsMax0037.jpg","images/3dsMax0038.jpg","images/3dsMax0039.jpg","images/3dsMax0040.jpg","images/3dsMax0041.jpg","images/3dsMax0042.jpg","images/3dsMax0043.jpg","images/3dsMax0044.jpg","images/3dsMax0045.jpg","images/3dsMax0046.jpg","images/3dsMax0047.jpg","images/3dsMax0048.jpg","images/3dsMax0049.jpg","images/3dsMax0050.jpg","images/3dsMax0051.jpg","images/3dsMax0052.jpg","images/3dsMax0053.jpg","images/3dsMax0054.jpg","images/3dsMax0055.jpg","images/3dsMax0056.jpg","images/3dsMax0057.jpg","images/3dsMax0058.jpg","images/3dsMax0059.jpg","images/3dsMax0060.jpg","images/3dsMax0061.jpg","images/3dsMax0062.jpg","images/3dsMax0063.jpg","images/3dsMax0064.jpg","images/3dsMax0065.jpg","images/3dsMax0066.jpg","images/3dsMax0067.jpg","images/3dsMax0068.jpg","images/3dsMax0069.jpg","images/3dsMax0070.jpg","images/3dsMax0071.jpg","images/3dsMax0072.jpg","images/3dsMax0073.jpg","images/3dsMax0074.jpg","images/3dsMax0075.jpg","images/3dsMax0076.jpg","images/3dsMax0077.jpg","images/3dsMax0078.jpg","images/3dsMax0079.jpg","images/3dsMax0080.jpg","images/3dsMax0081.jpg","images/3dsMax0082.jpg","images/3dsMax0083.jpg","images/3dsMax0084.jpg","images/3dsMax0085.jpg","images/3dsMax0086.jpg","images/3dsMax0087.jpg","images/3dsMax0088.jpg","images/3dsMax0089.jpg","images/3dsMax0090.jpg","photos/roni.jpg","Components/Animation.js","Components/Menu.js","Components/Board.js","Components/Generator.js","misc/short.js","misc/solve.js","Actions/Action.js","Actions/types/type.js","Components/Portfolio.js","misc/code.js","serviceWorker.js","Reducers/Reducer.js","index.js"],"names":["module","exports","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","tag","imagesArr","require","element","img","Image","src","Animation","canvasRef","useRef","scrollSignRef","useEffect","ref","current","scrollRef","ctx","getContext","currentLocation","document","body","style","overflow","onload","fillRect","window","innerWidth","innerHeight","drawImage","addEventListener","width","height","newLocation","getBoundingClientRect","y","scroll","top","behavior","startPos","setImage","className","yPos","length","delta","Math","max","min","deltaY","totalImages","requestAnimationFrame","touch","touches","clientY","getStartPos","mouseEvent","WheelEvent","dispatchEvent","Menu","inverted","fixed","Item","link","name","href","target","rel","position","Square","props","background","bgcolor","digit","connect","state","board","startPoint","path","maze","x","rows","colKey","boardArray","key","makeCol","obj","forEach","color","array","i","push","createBoard","shortPath","makePath","makeResult","exitPoint","movesBase","_widthLength","_heightLength","Node","point","value","this","left","right","forward","backward","Tree","root","pos","track","currentNode","ey","ex","moves","startPose","yMove","xMove","filter","addTwo","findIndex","index","node","slice","grow","arr","shortestPath","dfsShort","pop","tree","short","treeVision","JSON","stringify","traverse","sort","a","b","shortest","SolveShort","j","findExit","Message","positive","Header","Icon","error","SolvingMaze","solution","dfs","result","Solver","dispatch","makeMaze","randMaze","type","payload","updateBoard","boolean","updateResult","showPath","Button","marginLeft","marginRight","onClick","Array","fill","Number","weightedRandom","0","1","prob","sum","r","random","floor","validStartPoint","generateMaze","primary","Portfolio","textAlign","alt","gif","customStyle","language","vs2015","Grid","columns","Column","Segment","Boolean","location","hostname","match","intialState","store","createStore","action","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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BCA3CD,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,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","file":"static/js/main.fb5b08d9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/maze.4440b2ab.gif\";","var map = {\n\t\"./3dsMax.jpg\": 152,\n\t\"./3dsMax0001.jpg\": 153,\n\t\"./3dsMax0002.jpg\": 154,\n\t\"./3dsMax0003.jpg\": 155,\n\t\"./3dsMax0004.jpg\": 156,\n\t\"./3dsMax0005.jpg\": 157,\n\t\"./3dsMax0006.jpg\": 158,\n\t\"./3dsMax0007.jpg\": 159,\n\t\"./3dsMax0008.jpg\": 160,\n\t\"./3dsMax0009.jpg\": 161,\n\t\"./3dsMax0010.jpg\": 162,\n\t\"./3dsMax0011.jpg\": 163,\n\t\"./3dsMax0012.jpg\": 164,\n\t\"./3dsMax0013.jpg\": 165,\n\t\"./3dsMax0014.jpg\": 166,\n\t\"./3dsMax0015.jpg\": 167,\n\t\"./3dsMax0016.jpg\": 168,\n\t\"./3dsMax0017.jpg\": 169,\n\t\"./3dsMax0018.jpg\": 170,\n\t\"./3dsMax0019.jpg\": 171,\n\t\"./3dsMax0020.jpg\": 172,\n\t\"./3dsMax0021.jpg\": 173,\n\t\"./3dsMax0022.jpg\": 174,\n\t\"./3dsMax0023.jpg\": 175,\n\t\"./3dsMax0024.jpg\": 176,\n\t\"./3dsMax0025.jpg\": 177,\n\t\"./3dsMax0026.jpg\": 178,\n\t\"./3dsMax0027.jpg\": 179,\n\t\"./3dsMax0028.jpg\": 180,\n\t\"./3dsMax0029.jpg\": 181,\n\t\"./3dsMax0030.jpg\": 182,\n\t\"./3dsMax0031.jpg\": 183,\n\t\"./3dsMax0032.jpg\": 184,\n\t\"./3dsMax0033.jpg\": 185,\n\t\"./3dsMax0034.jpg\": 186,\n\t\"./3dsMax0035.jpg\": 187,\n\t\"./3dsMax0036.jpg\": 188,\n\t\"./3dsMax0037.jpg\": 189,\n\t\"./3dsMax0038.jpg\": 190,\n\t\"./3dsMax0039.jpg\": 191,\n\t\"./3dsMax0040.jpg\": 192,\n\t\"./3dsMax0041.jpg\": 193,\n\t\"./3dsMax0042.jpg\": 194,\n\t\"./3dsMax0043.jpg\": 195,\n\t\"./3dsMax0044.jpg\": 196,\n\t\"./3dsMax0045.jpg\": 197,\n\t\"./3dsMax0046.jpg\": 198,\n\t\"./3dsMax0047.jpg\": 199,\n\t\"./3dsMax0048.jpg\": 200,\n\t\"./3dsMax0049.jpg\": 201,\n\t\"./3dsMax0050.jpg\": 202,\n\t\"./3dsMax0051.jpg\": 203,\n\t\"./3dsMax0052.jpg\": 204,\n\t\"./3dsMax0053.jpg\": 205,\n\t\"./3dsMax0054.jpg\": 206,\n\t\"./3dsMax0055.jpg\": 207,\n\t\"./3dsMax0056.jpg\": 208,\n\t\"./3dsMax0057.jpg\": 209,\n\t\"./3dsMax0058.jpg\": 210,\n\t\"./3dsMax0059.jpg\": 211,\n\t\"./3dsMax0060.jpg\": 212,\n\t\"./3dsMax0061.jpg\": 213,\n\t\"./3dsMax0062.jpg\": 214,\n\t\"./3dsMax0063.jpg\": 215,\n\t\"./3dsMax0064.jpg\": 216,\n\t\"./3dsMax0065.jpg\": 217,\n\t\"./3dsMax0066.jpg\": 218,\n\t\"./3dsMax0067.jpg\": 219,\n\t\"./3dsMax0068.jpg\": 220,\n\t\"./3dsMax0069.jpg\": 221,\n\t\"./3dsMax0070.jpg\": 222,\n\t\"./3dsMax0071.jpg\": 223,\n\t\"./3dsMax0072.jpg\": 224,\n\t\"./3dsMax0073.jpg\": 225,\n\t\"./3dsMax0074.jpg\": 226,\n\t\"./3dsMax0075.jpg\": 227,\n\t\"./3dsMax0076.jpg\": 228,\n\t\"./3dsMax0077.jpg\": 229,\n\t\"./3dsMax0078.jpg\": 230,\n\t\"./3dsMax0079.jpg\": 231,\n\t\"./3dsMax0080.jpg\": 232,\n\t\"./3dsMax0081.jpg\": 233,\n\t\"./3dsMax0082.jpg\": 234,\n\t\"./3dsMax0083.jpg\": 235,\n\t\"./3dsMax0084.jpg\": 236,\n\t\"./3dsMax0085.jpg\": 237,\n\t\"./3dsMax0086.jpg\": 238,\n\t\"./3dsMax0087.jpg\": 239,\n\t\"./3dsMax0088.jpg\": 240,\n\t\"./3dsMax0089.jpg\": 241,\n\t\"./3dsMax0090.jpg\": 242\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 151;","module.exports = __webpack_public_path__ + \"static/media/3dsMax.25255ffd.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3dsMax0001.16f444bb.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3dsMax0002.0117a6c4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3dsMax0003.c6665668.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3dsMax0004.0c28fef4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3dsMax0005.a8facfde.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3dsMax0006.0987bc5e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3dsMax0007.e24665af.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3dsMax0008.040cff59.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3dsMax0009.26923f30.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3dsMax0010.a540f558.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3dsMax0011.56f0d63a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3dsMax0012.2e914fd1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3dsMax0013.357e1f47.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3dsMax0014.f7558ecb.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3dsMax0015.af5a4f99.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3dsMax0016.e187d3de.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3dsMax0017.dfe187ec.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3dsMax0018.6869438f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3dsMax0019.735b6f90.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3dsMax0020.549b6fb1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3dsMax0021.447f6a94.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3dsMax0022.e4374c3b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3dsMax0023.96621db2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3dsMax0024.ddcc4064.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3dsMax0025.feda4d63.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3dsMax0026.92f5457b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3dsMax0027.d1b7285d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3dsMax0028.a11306ad.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3dsMax0029.09e58239.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3dsMax0030.0480ed9a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3dsMax0031.25f32d23.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3dsMax0032.3dfe0665.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3dsMax0033.36279b48.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3dsMax0034.75147b51.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3dsMax0035.5e6e08d6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3dsMax0036.18a1317f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3dsMax0037.496ff3a0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3dsMax0038.5efbe142.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3dsMax0039.3c70d510.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3dsMax0040.9e4c9e85.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3dsMax0041.b692348e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3dsMax0042.9205eb35.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3dsMax0043.37f1c49f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3dsMax0044.04107602.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3dsMax0045.d47b1703.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3dsMax0046.058b802b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3dsMax0047.a875358c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3dsMax0048.7b4cae3d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3dsMax0049.23f76267.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3dsMax0050.774eb9d3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3dsMax0051.fe9068d1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3dsMax0052.3dc534e1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3dsMax0053.a09a5e51.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3dsMax0054.f4e3f3fe.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3dsMax0055.b1a55392.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3dsMax0056.22c16c60.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3dsMax0057.273c8ff9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3dsMax0058.94977eeb.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3dsMax0059.4ed32e69.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3dsMax0060.06d4e92e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3dsMax0061.148bbc44.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3dsMax0062.73f009d3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3dsMax0063.efc7fab1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3dsMax0064.c70b16f1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3dsMax0065.56f628df.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3dsMax0066.6ff25534.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3dsMax0067.ac9eaa43.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3dsMax0068.6cf2f297.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3dsMax0069.d411871d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3dsMax0070.0849af08.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3dsMax0071.1713c484.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3dsMax0072.c80d08c5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3dsMax0073.d195d407.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3dsMax0074.240141c8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3dsMax0075.8bddf12d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3dsMax0076.fe41f6ec.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3dsMax0077.b9562894.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3dsMax0078.003d2646.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3dsMax0079.1ad05819.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3dsMax0080.d5e5d97c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3dsMax0081.8feda0c0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3dsMax0082.ea35d908.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3dsMax0083.0c583ee1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3dsMax0084.73253de6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3dsMax0085.df838875.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3dsMax0086.ddb61a16.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3dsMax0087.9e0adcb5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3dsMax0088.c4f2e6b3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3dsMax0089.ae2d80d1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3dsMax0090.d38867ba.jpg\";","module.exports = __webpack_public_path__ + \"static/media/roni.9af8c134.jpg\";","import React, { useRef, useEffect } from 'react'\nimport '../css/Portfolio.css'\nconst importImages = (tag) => tag.keys().map(tag) // Import Sequence of Images\nconst images = importImages(require.context('../images', false, /\\.(png|jpe?g|svg)$/))\nconst imagesArr = images.map(element => {\n  // eslint-disable-next-line no-undef\n  const img = new Image()\n  img.src = element\n  return img\n})\n\nexport const Animation = () => {\n  const canvasRef = useRef(null)\n  const scrollSignRef = useRef(null)\n\n  useEffect(() => {\n    // consts\n    const ref = canvasRef.current\n    const scrollRef = scrollSignRef.current\n    const ctx = ref.getContext('2d')\n    const totalImages = 91\n    let currentLocation = 0\n    // disable scroll on start\n    document.body.style.overflow = 'hidden'\n    // First Draw\n    imagesArr[0].onload = function () {\n      ctx.fillRect(0, 0, window.innerWidth, window.innerHeight)\n      ctx.drawImage(imagesArr[0], 0, 0, window.innerWidth, window.innerHeight)\n    };\n\n    // Resize Func\n    (function resizeCanvas () {\n      window.addEventListener('resize', function () {\n        ref.width = window.innerWidth\n        ref.height = window.innerHeight\n        ctx.fillRect(0, 0, window.innerWidth, window.innerHeight)\n        ctx.drawImage(imagesArr[currentLocation], 0, 0, window.innerWidth, window.innerHeight)\n      }, false)\n    })();\n\n    // Wheel Func\n    (function mouseWheel () {\n      let newLocation = null\n      const yPos = ref.getBoundingClientRect()\n      // eslint-disable-next-line curly\n      if (yPos.y !== 0)\n        window.scroll({ top: 0, behavior: 'smooth' })\n      function animate (e) {\n        // remove sign\n        scrollRef.className = 'hidden'\n        // get screen y axis ref\n        const yPos = ref.getBoundingClientRect();\n        // disable scroll when reach to top\n        (currentLocation === imagesArr.length - 1 || yPos.y !== 0)\n          ? document.body.style.overflow = ''\n          : document.body.style.overflow = 'hidden'\n        // enable animation only on top\n        if (yPos.y === 0) {\n          const delta = Math.max(-1, Math.min(1, e.deltaY))\n          if (delta === -1) currentLocation -= 1\n          if (delta === 1) currentLocation += 1\n          if (currentLocation < 0) currentLocation = 0\n          if (currentLocation >= (totalImages - 1)) currentLocation = (totalImages - 1)\n          if (newLocation === null) {\n            // eslint-disable-next-line no-undef\n            requestAnimationFrame(setImage)\n          }\n          newLocation = currentLocation\n        }\n      }\n      // Listen to scrolling\n      let startPos = null\n      window.addEventListener('wheel', animate, false)\n      window.addEventListener('touchstart', (e) => getStartPos(e, startPos), false)\n      window.addEventListener('touchmove', getTouchPos, false)\n      // Get start point for mobile\n      function getStartPos (e) {\n        const touch = e.touches[0]\n        startPos = touch.clientY\n      }\n      // Get move points for mobile\n      function getTouchPos (e) {\n        const touch = e.touches[0]\n        // eslint-disable-next-line no-undef\n        const mouseEvent = new WheelEvent('wheel', {\n          deltaY: -1 * (touch.clientY - startPos)\n        })\n        window.dispatchEvent(mouseEvent)\n      }\n      // Set the images\n      function setImage () {\n        ctx.fillRect(0, 0, window.innerWidth, window.innerHeight)\n        ctx.drawImage(imagesArr[newLocation], 0, 0, window.innerWidth, window.innerHeight)\n        newLocation = null\n      }\n    })()\n  })\n  return (\n    <div className=\"container\">\n      <canvas className=\"img canvas\" width={window.innerWidth} height={window.innerHeight} ref={canvasRef}/>\n      <section ref={ scrollSignRef }>\n        <div className=\"scroll chevron\"></div>\n        <div className=\"scroll chevron\"></div>\n        <div className=\"scroll chevron\"></div>\n        <span className='scroll title scrollHeader'>Scroll down</span>\n      </section>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Menu as MenuTag } from 'semantic-ui-react'\nimport '../css/Portfolio.css'\n\nconst Menu = () => {\n  return (\n    <MenuTag inverted fixed=\"top\">\n      <MenuTag.Item\n        link\n        name='GitHub'\n        href=\"https://github.com/Talkwondo/\"\n        target=\"_blank\"\n        rel=\"noreferrer\"\n      />\n      <MenuTag.Item\n        link\n        name='Linkdin'\n        href=\"https://www.linkedin.com/in/tal-talmon/\"\n        target=\"_blank\"\n        rel=\"noreferrer\"\n      />\n      <MenuTag.Item\n        position='right'\n        link\n        name='Tal Talmon Portfolio'\n        href=\"mailto: tal@tkd.co.il\"\n        rel=\"noreferrer\"\n      />\n    </MenuTag>\n  )\n}\n\nexport default Menu\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst mapStateToProps = state => ({\n  board: state.board,\n  startPoint: state.startPoint,\n  path: state.path\n})\n\nexport const Square = props => <div style={{ background: props.bgcolor }} className=\"square\"><span className=\"digit\">{props.digit}</span></div>\n\nconst createBoard = props => {\n  const maze = props.board\n  const [y, x] = props.startPoint\n  let rows = 0\n  let colKey = 0\n  const boardArray = [<tr key={'row' + 10}>{makeCol()}</tr>]\n\n  function makeCol () {\n    const obj = {}\n    props.path.forEach(element => { obj[element[1]] = 1 })\n    const array = []\n    let color\n    for (let i = 0; i < 9; i++) {\n      (maze[rows][i] === 2) ? color = '#1c73da' : color = '#151515'\n      if (obj[`${rows},${i}`] && maze[rows][i] !== 2) { color = '#ff3c34' }\n      if (y === rows && x === i && maze[rows][i] !== 'M') { color = '#01a79d' }\n      array.push(<th key={`col_${colKey}`}><Square bgcolor={color} digit={maze[rows][i]}/></th>)\n      colKey++\n    }\n    return array\n  }\n  rows++\n  while (rows < 9) {\n    boardArray.push(<tr key={'row_' + rows}>{\n      boardArray.map((...args) => (args[1] === 0) ? makeCol() : false)\n    }</tr>)\n    rows++\n  }\n  return (\n    <table>\n      <tbody>\n        {boardArray}\n      </tbody>\n    </table>\n  )\n}\n\nexport const Board = props => <div>{createBoard(props)}</div>\n\nexport default connect(mapStateToProps, null)(Board)\n","import React from 'react'\nimport Board from '../Components/Board'\nimport { updateBoard, updateResult, showPath } from '../Actions/Action'\nimport { Button, Message, Icon } from 'semantic-ui-react'\nimport { connect } from 'react-redux'\nimport { Solver } from '../misc/solve'\nimport { SolveShort } from '../misc/short'\n\nconst generateMaze = (makeMaze, makeResult, makePath) => {\n  // Generate Maze 9X9 with number 0 and 1\n  const randMaze = new Array(9).fill(null).map(() => new Array(9).fill(null))\n  for (let i = 0; i < 9; i++) {\n    for (let j = 0; j < 9; j++) {\n      randMaze[i][j] = Number(weightedRandom({ 0: 0.6, 1: 0.4 }))\n    }\n  }\n  function weightedRandom (prob) {\n    let i\n    let sum = 0\n    const r = Math.random()\n    for (i in prob) {\n      sum += prob[i]\n      if (r <= sum) return i\n    }\n  }\n  // Insert exit point to the Maze\n  randMaze[Math.floor(Math.random() * 9)][Math.floor(Math.random() * 9)] = 2\n\n  // Making start point\n  function validStartPoint (startPoint) {\n    return (randMaze[startPoint[0]][startPoint[1]] === 1 || randMaze[startPoint[0]][startPoint[1]] === 2)\n      ? validStartPoint([Math.floor(Math.random() * 9), Math.floor(Math.random() * 9)]) : startPoint\n  }\n  const startPoint = validStartPoint([Math.floor(Math.random() * 9), Math.floor(Math.random() * 9)])\n  makeMaze(startPoint, randMaze)\n  makeResult(<div></div>)\n  makePath([])\n}\n\nconst shortPath = (props, makePath, makeResult) => {\n  if (props.board[0][0] === 'M') { return }\n  const findExit = () => {\n    for (let i = 0; i < props.board.length; i++) {\n      for (let j = 0; j < props.board[0].length; j++) {\n        if (props.board[i][j] === 2) {\n          return [i, j]\n        }\n      }\n    }\n  }\n  const path = SolveShort(props.board, props.startPoint, findExit())\n  if (path[0]) {\n    makePath(path[0])\n    makeResult(<div className=\"column\">\n      <Message positive>\n        <Message.Header>{`The length of the path is ${path[0].length - 1}`}  <Icon name='map' /></Message.Header>\n      </Message>\n    </div>)\n  } else {\n    makeResult(<div className=\"column\"><Message error>\n      <Message.Header>There is no exit  <Icon name='dont' /></Message.Header>\n    </Message></div>)\n  }\n}\n\nconst SolvingMaze = (props, makeResult, makePath) => {\n  if (props.board[0][0] === 'M') { return }\n  const solution = Solver(props.board, props.startPoint);\n  (solution[1])\n    ? makeResult(<div className=\"column\">\n      <Message positive>\n        <Message.Header>{solution[0]}  <Icon name='thumbs up' /></Message.Header>\n      </Message>\n      <Message className=\"textJson\">\n        <Message.Header>Below is the Tree structure, and for a cool visual presentation, I recommend to copy and past it on <a href=\"https://vanya.jp.net/vtree/\" target=\"_blank\" rel=\"noreferrer\">this</a> website.</Message.Header>\n        <span className=\"json\">{solution[3]}</span>\n      </Message>\n    </div>\n    )\n    : makeResult(<div className=\"column\"><Message error>\n      <Message.Header>There is no exit  <Icon name='dont' /></Message.Header>\n    </Message>\n    <Message className=\"textJson\">\n      <Message.Header className=\"spaceAside\">Below is the Tree structure, and for a cool visual presentation, I recommend to copy and past it on <a href=\"https://vanya.jp.net/vtree/\" target=\"_blank\" rel=\"noreferrer\">this</a> website.</Message.Header>\n      <div className=\"json\">{solution[3]}</div>\n    </Message>\n    </div>)\n  makePath(solution[2])\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    makeMaze: (startPoint, randMaze) => dispatch(updateBoard(startPoint, randMaze)),\n    makeResult: (boolean) => dispatch(updateResult(boolean)),\n    makePath: (arr) => dispatch(showPath(arr))\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    board: state.board,\n    startPoint: state.startPoint,\n    result: state.result\n  }\n}\n\nexport const Generator = props => {\n  const { makeMaze, makeResult, makePath } = props\n  return (\n    <main>\n      <section className=\"centerElement\">\n        <Board/>\n      </section>\n      <section className=\"centerElement\">\n        <Button style={{ marginLeft: '10px', marginRight: '10px' }} inverted onClick={() => generateMaze(makeMaze, makeResult, makePath)}>Generate Maze</Button>\n        <Button primary inverted onClick={() => SolvingMaze(props, makeResult, makePath)}>Solve Maze</Button>\n        <Button style={{ marginLeft: '5px' }} className=\"buttonSolve\" color='green' inverted onClick={() => shortPath(props, makePath, makeResult)}>Short Path</Button>\n      </section>\n      <section className=\"centerElement\">\n        {props.result}\n      </section>\n    </main>\n  )\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Generator)\n","export const SolveShort = (maze, startPoint, exitPoint) => {\n  const movesBase = [\n    [-1, 0],\n    [0, -1],\n    [0, +1],\n    [+1, 0]\n  ]\n  const _widthLength = maze.length\n  const _heightLength = maze[0].length\n\n  class Node {\n    constructor (point, value) {\n      this.left = null\n      this.right = null\n      this.forward = null\n      this.backward = null\n      this.value = value\n      this.point = point\n    }\n  }\n\n  class Tree {\n    constructor () {\n      this.root = null\n    }\n\n    grow (pos, maze, track, currentNode) {\n      const [y, x] = pos.point\n      const [ey, ex] = exitPoint\n      const moves = ((y, x, ey, ex) => {\n        switch (true) {\n          case ey < y && ex > x:\n            return [movesBase[0], movesBase[2], movesBase[3], movesBase[1]]\n          case ey < y && ex < x: \n            return [movesBase[0], movesBase[1], movesBase[3], movesBase[2]]\n\n          case ey > y && ex > x:\n            return [movesBase[3], movesBase[2], movesBase[0], movesBase[1]]\n          case ey > y && ex < x: \n            return [movesBase[3], movesBase[1], movesBase[0], movesBase[2]]\n\n          case ex === x && ey > y:\n            return [movesBase[3], movesBase[1], movesBase[2], movesBase[0]]\n          case ex === x && ey < y:\n            return [movesBase[0], movesBase[1], movesBase[2], movesBase[3]]\n\n          case ey === y && ex > x:\n            return [movesBase[2], movesBase[0], movesBase[3], movesBase[1]]\n          case ey === y && ex < x:\n            return [movesBase[1], movesBase[0], movesBase[3], movesBase[2]]\n\n          default:\n            return movesBase\n        }\n      })(y, x, ey, ex)\n      if (track.length === 1) {\n        this.root = startPose\n        currentNode = this.root\n      }\n      const path = moves.map(([yMove, xMove]) => [y + yMove, x + xMove])\n      const filter = path.filter((path) => {\n        if (path[0] > _widthLength - 1 || path[0] < 0 || path[1] > _heightLength - 1 ||\n                        path[1] < 0 || maze[path[0]][path[1]] === 1) {\n          return false\n        }\n        if (maze[path[0]][path[1]] === 2) {\n          this.addTwo(pos, path, currentNode, maze)\n          return false\n        }\n        return track.findIndex(index => index[0] === path[0] && index[1] === path[1]) === -1\n      })\n      const nodeArr = filter.map(pos => {\n        const node = new Node(pos, maze[pos[0]][pos[1]])\n        if (maze[pos[0]][pos[1]] !== 2) {\n          track.push(pos)\n        }\n        return node\n      })\n\n      nodeArr.forEach((position, index) => {\n        if (index === 1) {\n          const index = track.findIndex(index => index[0] === position.point[0] && index[1] === position.point[1])\n          track = track.slice(0, index + 1)\n        }\n        switch (true) {\n          case position.point[0] < pos.point[0]:\n            currentNode.backward = position\n            this.grow(position, maze, track, currentNode.backward)\n            break\n          case position.point[0] > pos.point[0]:\n            currentNode.forward = position\n            this.grow(position, maze, track, currentNode.forward)\n            break\n          case position.point[1] < pos.point[1]:\n            currentNode.left = position\n            this.grow(position, maze, track, currentNode.left)\n            break\n          case position.point[1] > pos.point[1]:\n            currentNode.right = position\n            this.grow(position, maze, track, currentNode.right)\n            break\n          default:\n        }\n      })\n    }\n\n    addTwo (pos, path, currentNode, maze) {\n      const node = new Node(path, maze[path[0]][path[1]])\n      switch (true) {\n        case path[0] < pos.point[0]:\n          currentNode.backward = node\n          break\n        case path[0] > pos.point[0]:\n          currentNode.forward = node\n          break\n        case path[1] < pos.point[1]:\n          currentNode.left = node\n          break\n        case path[1] > pos.point[1]:\n          currentNode.right = node\n          break\n        default:\n      }\n    }\n\n    dfsShort (node, arr, shortestPath) {\n      arr.push([node.value, node.point])\n      if (node.value === 2) {\n        shortestPath.push([...arr])\n      }\n      if (node.left) {\n        this.dfsShort(node.left, arr, shortestPath)\n      }\n      if (node.right) {\n        this.dfsShort(node.right, arr, shortestPath)\n      }\n      if (node.forward) {\n        this.dfsShort(node.forward, arr, shortestPath)\n      }\n      if (node.backward) {\n        this.dfsShort(node.backward, arr, shortestPath)\n      }\n      arr.pop()\n      if (!arr.length) {\n        return shortestPath\n      }\n    }\n  }\n  const startPose = new Node([startPoint[0], startPoint[1]], maze[startPoint[0]][startPoint[1]])\n  const tree = new Tree()\n  tree.grow(startPose, maze, [[startPoint[0], startPoint[1]]])\n  const short = tree.dfsShort(tree.root, [], [])\n  const shortest = short => (short.length) ? short.sort((a, b) => a.length - b.length)[0] : false\n  const treeVision = JSON.stringify(traverse(tree.root))\n\n  function traverse (node) {\n    const tree = { value: node.value, pos: node.point }\n    tree.left = node.left === null ? null : traverse(node.left)\n    tree.right = node.right === null ? null : traverse(node.right)\n    tree.forward = node.forward === null ? null : traverse(node.forward)\n    tree.backward = node.backward === null ? null : traverse(node.backward)\n\n    return tree\n  }\n  return [shortest(short), treeVision]\n}\n","export const Solver = (maze, startPoint) => {\n  const moves = [\n    [+1, 0],\n    [0, -1],\n    [-1, 0],\n    [0, +1]\n  ]\n  const _widthLength = maze.length\n  const _heightLength = maze[0].length\n\n  class Node {\n    constructor (point, value) {\n      this.left = null\n      this.right = null\n      this.forward = null\n      this.backward = null\n      this.value = value\n      this.point = point\n    }\n  }\n\n  class Tree {\n    constructor () {\n      this.root = null\n    }\n\n    grow (pos, maze, track, currentNode) {\n      if (track.length === 1) {\n        this.root = startPose\n        currentNode = this.root\n      }\n      const [y, x] = pos.point\n      const path = moves.map(([yMove, xMove]) => [y + yMove, x + xMove])\n      const filter = path.filter((path) => {\n        if (path[0] > _widthLength - 1 || path[0] < 0 || path[1] > _heightLength - 1 ||\n                  path[1] < 0 || maze[path[0]][path[1]] === 1) {\n          return false\n        }\n        return track.findIndex(index => index[0] === path[0] && index[1] === path[1]) === -1\n      })\n      const nodeArr = filter.map(pos => {\n        const node = new Node(pos, maze[pos[0]][pos[1]])\n        track.push(pos)\n        return node\n      })\n      nodeArr.forEach(position => {\n        switch (true) {\n          case position.point[0] < pos.point[0]:\n            currentNode.backward = position\n            this.grow(position, maze, track, currentNode.backward)\n            break\n          case position.point[0] > pos.point[0]:\n            currentNode.forward = position\n            this.grow(position, maze, track, currentNode.forward)\n            break\n          case position.point[1] < pos.point[1]:\n            currentNode.left = position\n            this.grow(position, maze, track, currentNode.left)\n            break\n          case position.point[1] > pos.point[1]:\n            currentNode.right = position\n            this.grow(position, maze, track, currentNode.right)\n            break\n          default:\n        }\n      })\n    }\n\n    dfs (node, arr) {\n      if (node.left) {\n        this.dfs(node.left, arr)\n      }\n      if (node.right) {\n        this.dfs(node.right, arr)\n      }\n      if (node.forward) {\n        this.dfs(node.forward, arr)\n      }\n      if (node.backward) {\n        this.dfs(node.backward, arr)\n      }\n      arr.push([node.value, node.point])\n      return arr\n    }\n  }\n  const startPose = new Node([startPoint[0], startPoint[1]], maze[startPoint[0]][startPoint[1]])\n  const tree = new Tree()\n  tree.grow(startPose, maze, [[startPoint[0], startPoint[1]]])\n  const result = tree.dfs(tree.root, [])\n  const index = result.findIndex(arr => arr[0] === 2)\n\n  // stringify\n  const treeVision = JSON.stringify(traverse(tree.root))\n\n  function traverse (node) {\n    const tree = { value: node.value, pos: node.point }\n    tree.left = node.left === null ? null : traverse(node.left)\n    tree.right = node.right === null ? null : traverse(node.right)\n    tree.forward = node.forward === null ? null : traverse(node.forward)\n    tree.backward = node.backward === null ? null : traverse(node.backward)\n\n    return tree\n  }\n  return (index !== -1) ? [`True, the exit locates at ${result[index][1]}`, true, result, treeVision] : ['No', false, result, treeVision]\n}\n","import { UPDATE_BOARD, UPDATE_RESULT, SHOW_PATH } from './types/type'\n\nexport const updateBoard = (startPoint, randMaze) => {\n  return {\n    type: UPDATE_BOARD,\n    payload: { startPoint, randMaze }\n  }\n}\n\nexport const updateResult = boolean => {\n  return {\n    type: UPDATE_RESULT,\n    payload: boolean\n  }\n}\n\nexport const showPath = arr => {\n  return {\n    type: SHOW_PATH,\n    payload: arr\n  }\n}\n","export const UPDATE_BOARD = 'UPDATE_BOARD'\nexport const UPDATE_RESULT = 'UPDATE_RESULT'\nexport const SHOW_PATH = 'SHOW_PATH'\n","import React from 'react'\nimport { Animation } from './Animation'\nimport Menu from './Menu'\nimport '../css/Portfolio.css'\nimport SyntaxHighlighter from 'react-syntax-highlighter'\nimport { vs2015 } from 'react-syntax-highlighter/dist/esm/styles/hljs'\nimport { code } from '../misc/code.js'\nimport Generator from '../Components/Generator.js'\nimport { Grid, Segment } from 'semantic-ui-react'\nimport gif from '../gif/maze.gif'\n\nconst Portfolio = () => {\n  return (\n    <main className=\"container\">\n      <nav>\n        <Menu/>\n        <Animation />\n      </nav>\n      <section>\n        <header className=\"mazeTitle\">\n          <h1>The Maze Gunner</h1>\n        </header>\n        <article className=\"semi-container\">\n          <div className=\"introduction\">\n            <p>As I was pursuing a job for a higher web developer position,\n                I had never thought I'd encounter such a challenging question on the board during an interview. For an intermediate web developer like me,\n              it almost made me use my <a href=\"http://www.imfdb.org/wiki/CAA_Tactical_RONI\" target=\"_blank\" rel=\"noreferrer\">Roni Carbine Gun</a>.</p>\n            <p style={{ textAlign: 'center' }}>My demos here will use <a href=\"https://en.wikipedia.org/wiki/Recursion_(computer_science)\" target=\"_blank\" alt=\"Recursive Algorithm\" rel=\"noopener noreferrer\">Recursive Algorithm</a> to solve games in pure <kbd>JavaScript</kbd>.</p>\n          </div>\n        </article>\n        <section className=\"row\">\n          <aside className=\"leftText\">\n            <h2>The question on the board:</h2>\n            <p>\"You need to write a function that gets two arguments: 2D array and a starting point, this function returns a boolean if the maze can be solved or not\"</p>\n            <p><kbd>The digits in the 2D array represents the following: 0 is a valid path, 1 is a wall and 2 is the exit.</kbd></p>\n            <p>I tried to solve it using iterations, but encountered a loop problem. Later on, I had been told that the solution should be solved in <span className=\"strong\">DFS</span>, and then I thought, what the hell does that mean?</p>\n            <p>I found that the best algorithm to solve a maze is the Trémaux's Algorithm, and it actually uses DFS (<a href=\"https://en.wikipedia.org/wiki/Depth-first_search\" target=\"_blank\" alt=\"DFS Algorithm\" rel=\"noreferrer\">Depth First Search</a>) over a Tree.</p>\n          </aside>\n          <aside className=\"rightGif\">\n            <img src={gif} className=\"gif\" alt=\"maze exercise\"/>\n          </aside>\n        </section>\n        <section className=\"row\">\n          <aside className=\"solution\">\n            <h2 style={{ textAlign: 'left', marginLeft: '10px' }}>The solution approach:</h2>\n            <div className=\"codeFont\">\n              <p>When solving a complex maze there must at least two directions to move, but most likely three to four, thus we can not build a Binary Tree, instead we need to build a <a href=\"https://en.wikipedia.org/wiki/Tree_(graph_theory)\" target=\"_blank\" rel=\"noreferrer\">Graph Tree</a>.<br />\n                There is a much shorter solution, if we just want to match a value of 2 in our search, it can be done\n                without making a Tree or DFS, but if we want to present all the possible moves, the following approach is better.</p>\n              <p>Below is the milestones of the solution:</p>\n              <p>1. Create a Node and a Tree classes.</p>\n              <p>2. Make a recursive function within the Tree that increments the \"state\" location by valid moves.</p>\n              <p>3. Filter the locations that exceeds the array and walls.</p>\n              <p>4. Get array of up to four locations indicates the junctions.</p>\n              <p>5. For ordered Tree by moves, check the delta of the last state location and make a switch statement.</p>\n              <p>6. Assign the locations and call recursively with the current location and Node.</p>\n              <p>7. Traverse over the Tree with Depth First Search and add to array the values.</p>\n              <p>8. Get the results.</p>\n            </div>\n            <div className=\"trySection\">\n              <h2>Try it yourself</h2>\n              <p>Below you can generate a random board and check if there is an exit. Moreover, you can see the path of the DFS highlighted.</p>\n              <p>Recently I have also added an option to find the shortest path to the exit, I actually made a custom algorithm for that. this get be also for use for navigation, and I made an <a href=\"https://medium.com/@tal_45432/finding-the-real-shortest-path-in-javascript-depth-first-search-93a3ce514250\" target=\"_blank\">article</a> about it.</p>\n              <Generator/>\n            </div>\n          </aside>\n          <aside className=\"code\">\n            <SyntaxHighlighter customStyle={true} language=\"javascript\" style={vs2015}>\n              {code}\n            </SyntaxHighlighter>\n          </aside>\n        </section>\n      </section>\n      <footer>\n        <Grid columns='equal' inverted>\n          <Grid.Column>\n            <Segment>© Tal Talmon 2020</Segment>\n          </Grid.Column>\n          <Grid.Column width={8}>\n            <Segment>My entire portfolio was built by me, including the scroll photos, which illustrates my creativity and skills of web development and graphic design<br/>\n            </Segment>\n          </Grid.Column>\n          <Grid.Column>\n            <Segment><img src={require('../photos/roni.jpg')} alt='roni gun' className=\"avatar\"/></Segment>\n          </Grid.Column>\n        </Grid>\n      </footer>\n    </main>\n  )\n}\nexport default Portfolio\n","export const code =\n`function isSolve (maze, start) {\n  // Can be diagonal, but not our case\n  const moves = [\n      [+1, 0],\n      [0, -1],\n      [-1, 0],\n      [0, +1]\n    ]\n  const _widthLength = maze.length\n  const _heightLength = maze[0].length\n  // This is the Node creator\n  class Node {\n    constructor (point, value) {\n      this.left = null\n      this.right = null\n      this.forward = null\n      this.backward = null\n      this.value = value\n      this.point = point\n    }\n  }\n  // This is the Tree creator\n  class Tree {\n    constructor () {\n      this.root = null\n    }\n\n    grow (pos, maze, track, currentNode) {\n      if (track.length === 1) {\n        this.root = startPose\n        currentNode = this.root\n      }\n      const [y, x] = pos.point\n      const path = moves.map(([yMove, xMove]) => {\n        [y + yMove, x + xMove]}) \n      const filter = path.filter((path) => {\n        if (path[0] > _widthLength - 1 || path[0] < 0 \n          || path[1] > _heightLength - 1 ||\n          path[1] < 0 || maze[path[0]][path[1]] === 1) {\n            return false\n        }\n        return track.findIndex(index => index[0] === path[0] \n          && index[1] === path[1]) === -1\n      })\n      const nodeArr = filter.map(pos => {\n        const node = new Node(pos, maze[pos[0]][pos[1]])\n        track.push(pos)\n        return node\n      })\n      // To make the Tree organize by moves\n      nodeArr.forEach(position => {\n        switch (true) {\n          case position.point[0] < pos.point[0]:\n            currentNode.backward = position\n            this.grow(position, maze, track, \n              currentNode.backward)\n            break\n          case position.point[0] > pos.point[0]:\n            currentNode.forward = position\n            this.grow(position, maze, track, \n              currentNode.forward)\n            break\n          case position.point[1] < pos.point[1]:\n            currentNode.left = position\n            this.grow(position, maze, track, \n              currentNode.left)\n            break\n          case position.point[1] > pos.point[1]:\n            currentNode.right = position\n            this.grow(position, maze, track, \n              currentNode.right)\n            break\n          default:\n        }\n      })\n    }\n    // The Depth First Search over the tree\n    dfs (node, arr) {\n      if (node.left) {\n        this.dfs(node.left, arr)\n      }\n      if (node.right) {\n        this.dfs(node.right, arr)\n      }\n      if (node.forward) {\n        this.dfs(node.forward, arr)\n      }\n      if (node.backward) {\n        this.dfs(node.backward, arr)\n      }\n      arr.push([node.value, node.point])\n      return arr\n    }\n  }\n  // Constants and invocations\n  const startPose = new Node([startPoint[0], startPoint[1]], \n    maze[startPoint[0]][startPoint[1]])\n  const tree = new Tree()\n  tree.grow(startPose, maze, [[startPoint[0], \n    startPoint[1]]])\n  const result = tree.dfs(tree.root, [])\n  const index = result.findIndex(arr => arr[0] === 2);\n  return (index !== -1) ? true : false\n}`\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register (config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  // eslint-disable-next-line no-undef\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister()\n      })\n      .catch(error => {\n        console.error(error.message)\n      })\n  }\n}\n","import { UPDATE_BOARD, UPDATE_RESULT, SHOW_PATH } from '../Actions/types/type'\nimport React from 'react'\n\nconst intialState = {\n  board: new Array(9).fill('M').map(() => new Array(9).fill('M')),\n  startPoint: [0, 0],\n  result: <div></div>,\n  path: []\n}\n\nexport const setBoardData = (state = intialState, action = {}) => {\n  switch (action.type) {\n    case UPDATE_BOARD:\n      return { ...state, board: action.payload.randMaze, startPoint: action.payload.startPoint }\n    case UPDATE_RESULT:\n      return { ...state, result: action.payload }\n    case SHOW_PATH:\n      return { ...state, path: action.payload }\n    default:\n      return state\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './css/index.css'\nimport Portfolio from './Components/Portfolio'\nimport * as serviceWorker from './serviceWorker'\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux'\nimport { setBoardData } from './Reducers/Reducer'\n\nconst store = createStore(setBoardData) // reducer\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Portfolio />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}